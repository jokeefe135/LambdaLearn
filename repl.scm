(define (repl)
  (load "parser/parser.scm")
  (load "parser/parse-typed.scm")
  (load "parser/parse-untyped.scm")
  (load "interpreter.scm")
  (display "LambdaLearn REPL v1")
  (newline)
  (let loop ()
    (display "> ")
    (flush-output)
    (let ((line (read-line)))
      (cond
       ((eof-object? line)
        (display "Goodbye!")
        (newline))
       ((string=? line "")
        (loop))
       (else
        (let* ((expr   (parse line))
               (result (g:eval expr)))
          (display "; Input: ")
          (pp-expr expr)
          (newline)
          (write result)
          (newline)
          (loop)))))))
